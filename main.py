'''Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль
'''


def my_func_one(x, y):
    try:
        z = x / y
        return z
    except ZeroDivisionError:
        return "Делить на ноль нельзя"
    except ValueError:
        return "Требуется вводить только числа"


a = int(input("Enter a: "))
b = int(input("Enter a: "))
print(my_func_one(a, b))

'''
Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
'''


def my_func_two(name, surname, data, city, email, phone):
    print(f"Имя: {name}\nФамилия: {surname}\nДР: {data}\nГород: {city}\nEmail: {email}\nТелефон: {phone}\n")


my_func_two(name='Alexander', surname='Primer', data=1970, city='KZ', email='test@mail.ru', phone='9379992')

'''Реализовать функцию my_func(), которая принимает три позиционных аргумента,
и возвращает сумму наибольших двух аргументов.
'''


def my_func_three(x, y, z):
    sequence = [x, y, z]
    total = []
    max_1 = max(sequence)
    total.append(max_1)
    sequence.remove(max_1)
    max_2 = max(sequence)
    total.append(max_2)
    print(sum(total))


my_func_three(7, 2, 6)

'''Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень'''


def my_func_four(x, y):
    return 1 / x ** abs(y)
    # return x ** y


print(my_func_four(2, -3))

'''Программа запрашивает у пользователя строку чисел, разделенных пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введен после нескольких чисел,
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
'''
import sys

result = 0
a = True
while a is True:
    line = input("Введите число или спец. символ (q) для выхода: ")
    tokens = line.split(" ")
    for token in tokens:
        try:
            number = float(token)
            result += number
        except:
            if token == 'q' or token == 'Q':
                a = False
                break
            else:
                print("Ошибка!!!", file=sys.stderr)
                a = False
                break
    print(result)

'''
Реализовать функцию int_func(), принимающую слово из маленьких
латинских букв и возвращающую его же, но с прописной первой буквой.
Например, print(int_func(‘text’)) -> Text.
Продолжить работу над заданием. В программу должна попадать
строка из слов, разделенных пробелом. Каждое слово состоит
из латинских букв в нижнем регистре. Сделать вывод исходной
строки, но каждое слово должно начинаться с заглавной буквы.
Необходимо использовать написанную ранее функцию int_func().
'''
def int_func_five(*args):
    word = input("Input words ")
    print(word.title())
    return
int_func_five("wqe qweqwe qwe qwe qwe")